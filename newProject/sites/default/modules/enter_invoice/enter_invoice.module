<?php

function enter_invoice_menu() {
    $items = array();

    $items['invoice'] = array(//this creates a URL that will call this form at "examples/form-example"
//'title' => 'invoice',
// 'description' => 'A form to mess around with.',
      'page callback' => 'drupal_get_form', //this is the function that will be called when the page is accessed.  for a form, use drupal_get_form
      'page arguments' => array('enter_invoice_details_form'), //put the name of the form here
      'access callback' => TRUE,
      'type' => MENU_CALLBACK
    );

    return $items;
}

//----------------------------------------------------------------------------------------------------------------------------//
function enter_invoice_details_form($form, &$form_state) {
    /* $form['details'] = array(
      '#type' => 'fieldset',
      '#title' => t('Enter Invoice Details'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      //'#attributes' => array('class' => array('container-inline')),
      );
     */
    $form['tite'] = array(
      '#type' => 'title',
      '#title' => 'sample title',
    );
    $form['details']['inv_name'] = array(
      '#type' => 'textfield',
      '#title' => t('Invoice name:'),
      // '#default_value' => $name,
//'#title' => "sample",
//'#default_value' => "Name",
      '#description' => "Please enter the invoice name.",
        //'#required' => TRUE, //make this field required 
    );

    $form['details']['page_no:'] = array(
      '#type' => 'textfield', //you can find a list of available types in the form api
      '#title' => 'Page no:' . str_repeat('&nbsp;', 19),
      // '#default_value' => $colour,
//'#size' => 30,
//'#maxlength' => 6,
      '#description' => "Please enter the page number.",
        // '#required' => TRUE, //make this field required 
    );

    $form['inv_submit'] = array(
      '#type' => 'submit',
      '#value' => t('Next'),
    );

    return $form;
}

function enter_invoice_details_form_submmit($form, &$form_state) {
    $test = drupal_http_request("http://localhost/www.sample.com/?q=exposed-flower-details-view");

    foreach ($test as $key) {
        //dsm($key);
        if (!is_array($key)) {
            $dom = new domDocument;     //or $dom = new DOMDocument();
            $dom->loadHTML($key);
            foreach ($dom->getElementsByTagName('table') as $table) {
                foreach ($table->getElementsByTagName('tr') as $tr) {
                    if (!empty($tr->getElementsByTagName('th')->item(0)->nodeValue)) {
                        drupal_set_message($tr->getElementsByTagName('th')->item(0)->nodeValue
                            . ':' . $tr->getElementsByTagName('th')->item(1)->nodeValue
                            . ':' . $tr->getElementsByTagName('th')->item(2)->nodeValue);
                    }
                    if (!empty($tr->getElementsByTagName('td')->item(0)->nodeValue)) {
                        drupal_set_message($tr->getElementsByTagName('td')->item(0)->nodeValue
                            . ':' . $tr->getElementsByTagName('td')->item(1)->nodeValue
                            . ':' . $tr->getElementsByTagName('td')->item(2)->nodeValue);
                        $bulk_array[] = array(
                          'fid' => trim($tr->getElementsByTagName('td')->item(0)->nodeValue),
                          'name' => trim($tr->getElementsByTagName('td')->item(1)->nodeValue),
                          'color' => trim($tr->getElementsByTagName('td')->item(2)->nodeValue),);
                    }
                }
            }
        }
    }
}

function enter_invoice_details_form_submit($form, &$form_state) {
// $html=file_get_contents("http://localhost/www.sample.com/?q=flower/flower-available");
// $html = getHTML("http://localhost/www.sample.com/?q=flower/flower-available", 10);
//preg_match("/<title>(.*)</title>/i", $html, $match);
// $title = $match[1];
//drupal_set_message('title==' .$html[2]);
//for($i=0;$i<10;$i++)


    $nxtpage = TRUE;
    $page = !empty($form_state['values']['page_no:']) ? $form_state['values']['page_no:'] : 0;
    $bulk_array = array();
    $url = 'http://localhost/www.sample.com/?q=exposed-flower-details-view&page=';
    if ($page)
        fetch_content($bulk_array, $url, $page);
    else {

        while ($nxtpage) {
            $page++;
            $nxtpage = fetch_content($bulk_array, $url, $page);
           // $nxtpage = test($bulk_array, $url, $page);
        }
    }
    
    $test = drupal_http_request("http://localhost/www.sample.com/?q=exposed-flower-details-view");

    foreach ($test as $key) {
        //dsm($key);
        if (is_string($key)) {
            dsm($key);
        }
        }
    
    
    /*
     */

    //INSERT FETCHED DATA TO DATABASE..

    /*  $query = db_insert('fetch_table')            //code for multi insert of rows
      ->fields(array('fid', 'name', 'color'));
      foreach ($bulk_array as $record) {
      $query->values($record);
      }
      $query->execute();
     */
// TO TRY
    /*
      $keywords = array();
      $domain = array('http://davidwalsh.name');
      $doc = new DOMDocument;
      $doc->preserveWhiteSpace = FALSE;
      foreach ($domain as $key => $value) {
      @$doc->loadHTMLFile($value);
      $anchor_tags = $doc->getElementsByTagName('a');
      foreach ($anchor_tags as $tag) {
      $keywords[] = strtolower($tag->nodeValue);
      }
      }

     */

    //TEST...
    /*  $ch = curl_init();
      curl_setopt($ch, CURLOPT_URL, 'http://en.wikipedia.org/wiki/Web_crawler');
      curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

      $content = curl_exec($ch);
      curl_close($ch);

      $dom = new domDocument;
      $dom->loadHTML($content);
      $dom->preserveWhiteSpace = false;

      $tables = $dom->getElementsByTagName('div');

      foreach ($tables as $table) {
      $name1 = $table->nodeName;
      $value1 = $table->nodeValue;
      drupal_set_message("Attribute '$name1' :: '$value1'</n>");
      foreach ($table->attributes as $attr) {
      $name = $attr->nodeName;
      $value = $attr->nodeValue;
      drupal_set_message("Attribute '$name' :: '$value'<br />");
      }
      }
     */

    /*
     * -----------------------------------------------------------
     * $divs = $dom->getElementsByTagName('div');
      foreach ($divs as $div) {
      foreach ($div->attributes as $attr) {
      $name = $attr->nodeName;
      $value = $attr->nodeValue;
      //echo "Attribute '$name' :: '$value'<br />";
      drupal_set_message("Attribute '$name' :: '$value'<br />");
      }
      }
      ------------------------------------------------------------------------
     */
    /*  $tables = $dom->getElementsByTagName('table');
      foreach( $tables as $table )
      {
      $authors = $table->getElementsByTagName( "Name" );
      $author = $authors->item(0)->nodeValue;

      $publishers = $table->getElementsByTagName( "Colour" );
      $publisher = $publishers->item(0)->nodeValue;



      // echo "$author - $publisher\n";
      drupal_set_message("$author - $publisher\n");
      }
     */

    // drupal_set_message('success');
}

function getHTML($url, $timeout) {
    $ch = curl_init($url); // initialize curl with given url
    curl_setopt($ch, CURLOPT_USERAGENT, $_SERVER["HTTP_USER_AGENT"]); // set  useragent
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true); // write the response to a variable
    curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true); // follow redirects if any
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout); // max. seconds to execute
    curl_setopt($ch, CURLOPT_FAILONERROR, 1); // stop when it encounters an error
    return @curl_exec($ch);
}

function test($bulk_array, $url, $page) {
    $test = drupal_http_request($url . --$page);

    foreach ($test as $key) {
        //dsm($key);
        if (is_string($key)) {
            $dom = new domDocument;     //or $dom = new DOMDocument();
            $dom->loadHTML($key);
            if (empty($dom->getElementsByTagName('table')->item(0)->nodeValue)) {
                drupal_set_message('No content found or End of page');
                $nxtpage = FALSE;
            }
            else {
                foreach ($dom->getElementsByTagName('table') as $table) {
                    foreach ($table->getElementsByTagName('tr') as $tr) {
                        if (!empty($tr->getElementsByTagName('th')->item(0)->nodeValue)) {
                            drupal_set_message($tr->getElementsByTagName('th')->item(0)->nodeValue
                                . ':' . $tr->getElementsByTagName('th')->item(1)->nodeValue
                                . ':' . $tr->getElementsByTagName('th')->item(2)->nodeValue);
                        }
                        if (!empty($tr->getElementsByTagName('td')->item(0)->nodeValue)) {
                            drupal_set_message($tr->getElementsByTagName('td')->item(0)->nodeValue
                                . ':' . $tr->getElementsByTagName('td')->item(1)->nodeValue
                                . ':' . $tr->getElementsByTagName('td')->item(2)->nodeValue);
                            $bulk_array[] = array(
                              'fid' => trim($tr->getElementsByTagName('td')->item(0)->nodeValue),
                              'name' => trim($tr->getElementsByTagName('td')->item(1)->nodeValue),
                              'color' => trim($tr->getElementsByTagName('td')->item(2)->nodeValue),);
                        }
                    }
                }
            }
        }
    }
    if($page>3){
      return FALSE;
    }else{
        return TRUE;
    }
    return TRUE;
}

function fetch_content($bulk_array, $url, $page) {
    $nxtpage = TRUE;
    $ch = curl_init();
    //curl_setopt($ch, CURLOPT_URL, 'http://localhost/www.sample.com/?q=registrytable');
    curl_setopt($ch, CURLOPT_URL, $url . --$page);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    $content = curl_exec($ch);
    curl_close($ch);

    $dom = new domDocument;     //or $dom = new DOMDocument();
    $dom->loadHTML($content);   // for loading the html into the object
    $dom->preserveWhiteSpace = false;   // discard white space
// $tables = $dom->getElementsByTagName('table');
// $tables = $dom->getElementsByTagName('table');
    /* page=0;
      foreach ($dom->getElementsByTagName('dev') as $pager) {
      $page++;
      }
      drupal_set_message('no. of pages==' .$page);
     */

    // drupal_set_message('test=' . $content);
    if (empty($dom->getElementsByTagName('table')->item(0)->nodeValue)) {
        drupal_set_message('No content found or End of page');
        $nxtpage = FALSE;
    }
    else {
        drupal_set_message('page No.' . ( ++$page));
        foreach ($dom->getElementsByTagName('table') as $table) {
            foreach ($table->getElementsByTagName('tr') as $tr) {
                if (!empty($tr->getElementsByTagName('th')->item(0)->nodeValue)) {
                    drupal_set_message($tr->getElementsByTagName('th')->item(0)->nodeValue
                        . ':' . $tr->getElementsByTagName('th')->item(1)->nodeValue
                        . ':' . $tr->getElementsByTagName('th')->item(2)->nodeValue);
                }
                if (!empty($tr->getElementsByTagName('td')->item(0)->nodeValue)) {
                    drupal_set_message($tr->getElementsByTagName('td')->item(0)->nodeValue
                        . ':' . $tr->getElementsByTagName('td')->item(1)->nodeValue
                        . ':' . $tr->getElementsByTagName('td')->item(2)->nodeValue);
                    $bulk_array[] = array(
                      'fid' => trim($tr->getElementsByTagName('td')->item(0)->nodeValue),
                      'name' => trim($tr->getElementsByTagName('td')->item(1)->nodeValue),
                      'color' => trim($tr->getElementsByTagName('td')->item(2)->nodeValue),);
                }
            }
        }
    }
    return $nxtpage;
}
